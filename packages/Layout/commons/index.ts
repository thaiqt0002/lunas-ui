import { cva } from 'class-variance-authority'
import { InputType } from 'storybook/internal/types'

export const commonArgumentTypes: Record<string, InputType | undefined> = {
  p: {
    description: 'Set the padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  px: {
    description: 'Set the horizontal padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  py: {
    description: 'Set the vertical padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  pt: {
    description: 'Set the top padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  pr: {
    description: 'Set the right padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  pb: {
    description: 'Set the bottom padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  pl: {
    description: 'Set the left padding for the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  gap: {
    description: 'Set the gap between the children of the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  gapX: {
    description: 'Set the horizontal gap between the children of the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  gapY: {
    description: 'Set the vertical gap between the children of the component',
    table: {
      type: { summary: 'number' },
    },
    options: [0, 1, 2, 3, 4, 5, 6, 8, 9, 10],
    control: { type: 'select' },
  },
  position: {
    description: 'Set the position of the component',
    table: {
      type: { summary: 'string' },
    },
    options: ['static', 'fixed', 'absolute', 'relative', 'sticky'],
    control: { type: 'select' },
  },
  top: {
    description: 'Set the top position of the component',
    table: {
      type: { summary: 'string' },
    },
    options: [
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '-1',
      '-2',
      '-3',
      '-4',
      '-5',
      '-6',
      '-7',
      '-8',
      '-9',
    ],
    control: { type: 'select' },
  },
  right: {
    description: 'Set the right position of the component',
    table: {
      type: { summary: 'string' },
    },
    options: [
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '-1',
      '-2',
      '-3',
      '-4',
      '-5',
      '-6',
      '-7',
      '-8',
      '-9',
    ],
    control: { type: 'select' },
  },
  bottom: {
    description: 'Set the bottom position of the component',
    table: {
      type: { summary: 'string' },
    },
    options: [
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '-1',
      '-2',
      '-3',
      '-4',
      '-5',
      '-6',
      '-7',
      '-8',
      '-9',
    ],
    control: { type: 'select' },
  },
  left: {
    description: 'Set the left position of the component',
    table: {
      type: { summary: 'string' },
    },
    options: [
      '0',
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '-1',
      '-2',
      '-3',
      '-4',
      '-5',
      '-6',
      '-7',
      '-8',
      '-9',
    ],
    control: { type: 'select' },
  },
  overflow: {
    description: 'Set the overflow of the component',
    table: {
      type: { summary: 'string' },
    },
    options: ['auto', 'hidden', 'clip', 'scroll', 'visible'],
    control: { type: 'select' },
  },
  overflowX: {
    description: 'Set the horizontal overflow of the component',
    table: {
      type: { summary: 'string' },
    },
    options: ['auto', 'hidden', 'clip', 'scroll', 'visible'],
    control: { type: 'select' },
  },
  overflowY: {
    description: 'Set the vertical overflow of the component',
    table: {
      type: { summary: 'string' },
    },
    options: ['auto', 'hidden', 'clip', 'scroll', 'visible'],
    control: { type: 'select' },
  },
  flexGrow: {
    description: 'Set the flex-grow of the component',
    table: {
      type: { summary: 'string' },
    },
    options: ['0', '1'],
    control: { type: 'select' },
  },
  flexShrink: {
    description: 'Set the flex-shrink of the component',
    table: {
      type: { summary: 'string' },
    },
    options: ['0', '1'],
    control: { type: 'select' },
  },
}

export const commonLayout = cva('', {
  variants: {
    p: {
      '0': 'p-0',
      '1': 'p-1',
      '2': 'p-2',
      '3': 'p-3',
      '4': 'p-4',
      '5': 'p-5',
      '6': 'p-6',
      '7': 'p-7',
      '8': 'p-8',
      '9': 'p-9',
      '10': 'p-10',
    },
    px: {
      '0': 'px-0',
      '1': 'px-1',
      '2': 'px-2',
      '3': 'px-3',
      '4': 'px-4',
      '5': 'px-5',
      '6': 'px-6',
      '7': 'px-7',
      '8': 'px-8',
      '9': 'px-9',
      '10': 'px-10',
    },
    py: {
      '0': 'py-0',
      '1': 'py-1',
      '2': 'py-2',
      '3': 'py-3',
      '4': 'py-4',
      '5': 'py-5',
      '6': 'py-6',
      '7': 'py-7',
      '8': 'py-8',
      '9': 'py-9',
      '10': 'py-10',
    },
    pt: {
      '0': 'pt-0',
      '1': 'pt-1',
      '2': 'pt-2',
      '3': 'pt-3',
      '4': 'pt-4',
      '5': 'pt-5',
      '6': 'pt-6',
      '7': 'pt-7',
      '8': 'pt-8',
      '9': 'pt-9',
      '10': 'pt-10',
    },
    pr: {
      '0': 'pr-0',
      '1': 'pr-1',
      '2': 'pr-2',
      '3': 'pr-3',
      '4': 'pr-4',
      '5': 'pr-5',
      '6': 'pr-6',
      '7': 'pr-7',
      '8': 'pr-8',
      '9': 'pr-9',
      '10': 'pr-10',
    },
    pb: {
      '0': 'pb-0',
      '1': 'pb-1',
      '2': 'pb-2',
      '3': 'pb-3',
      '4': 'pb-4',
      '5': 'pb-5',
      '6': 'pb-6',
      '7': 'pb-7',
      '8': 'pb-8',
      '9': 'pb-9',
      '10': 'pb-10',
    },
    pl: {
      '0': 'pl-0',
      '1': 'pl-1',
      '2': 'pl-2',
      '3': 'pl-3',
      '4': 'pl-4',
      '5': 'pl-5',
      '6': 'pl-6',
      '7': 'pl-7',
      '8': 'pl-8',
      '9': 'pl-9',
      '10': 'pl-10',
    },
    gap: {
      '0': 'gap-0',
      '1': 'gap-1',
      '2': 'gap-2',
      '3': 'gap-3',
      '4': 'gap-4',
      '5': 'gap-5',
      '6': 'gap-6',
      '7': 'gap-7',
      '8': 'gap-8',
      '9': 'gap-9',
      '10': 'gap-10',
    },
    gapX: {
      '0': 'gap-x-0',
      '1': 'gap-x-1',
      '2': 'gap-x-2',
      '3': 'gap-x-3',
      '4': 'gap-x-4',
      '5': 'gap-x-5',
      '6': 'gap-x-6',
      '7': 'gap-x-7',
      '8': 'gap-x-8',
      '9': 'gap-x-9',
      '10': 'gap-x-10',
    },
    gapY: {
      '0': 'gap-y-0',
      '1': 'gap-y-1',
      '2': 'gap-y-2',
      '3': 'gap-y-3',
      '4': 'gap-y-4',
      '5': 'gap-y-5',
      '6': 'gap-y-6',
      '7': 'gap-y-7',
      '8': 'gap-y-8',
      '9': 'gap-y-9',
      '10': 'gap-y-10',
    },
    position: {
      static: 'static',
      fixed: 'fixed',
      absolute: 'absolute',
      relative: 'relative',
      sticky: 'sticky',
    },
    top: {
      '0': 'top-0',
      '1': 'top-1',
      '2': 'top-2',
      '3': 'top-3',
      '4': 'top-4',
      '5': 'top-5',
      '6': 'top-6',
      '7': 'top-7',
      '8': 'top-8',
      '9': 'top-9',
      '-1': '-top-1',
      '-2': '-top-2',
      '-3': '-top-3',
      '-4': '-top-4',
      '-5': '-top-5',
      '-6': '-top-6',
      '-7': '-top-7',
      '-8': '-top-8',
      '-9': '-top-9',
    },
    right: {
      '0': 'right-0',
      '1': 'right-1',
      '2': 'right-2',
      '3': 'right-3',
      '4': 'right-4',
      '5': 'right-5',
      '6': 'right-6',
      '7': 'right-7',
      '8': 'right-8',
      '9': 'right-9',
      '-1': '-right-1',
      '-2': '-right-2',
      '-3': '-right-3',
      '-4': '-right-4',
      '-5': '-right-5',
      '-6': '-right-6',
      '-7': '-right-7',
      '-8': '-right-8',
      '-9': '-right-9',
    },
    bottom: {
      '0': 'bottom-0',
      '1': 'bottom-1',
      '2': 'bottom-2',
      '3': 'bottom-3',
      '4': 'bottom-4',
      '5': 'bottom-5',
      '6': 'bottom-6',
      '7': 'bottom-7',
      '8': 'bottom-8',
      '9': 'bottom-9',
      '-1': '-bottom-1',
      '-2': '-bottom-2',
      '-3': '-bottom-3',
      '-4': '-bottom-4',
      '-5': '-bottom-5',
      '-6': '-bottom-6',
      '-7': '-bottom-7',
      '-8': '-bottom-8',
      '-9': '-bottom-9',
    },
    left: {
      '0': 'left-0',
      '1': 'left-1',
      '2': 'left-2',
      '3': 'left-3',
      '4': 'left-4',
      '5': 'left-5',
      '6': 'left-6',
      '7': 'left-7',
      '8': 'left-8',
      '9': 'left-9',
      '-1': '-left-1',
      '-2': '-left-2',
      '-3': '-left-3',
      '-4': '-left-4',
      '-5': '-left-5',
      '-6': '-left-6',
      '-7': '-left-7',
      '-8': '-left-8',
      '-9': '-left-9',
    },
    overflow: {
      auto: 'overflow-auto',
      hidden: 'overflow-hidden',
      clip: 'overflow-clip',
      scroll: 'overflow-scroll',
      visible: 'overflow-visible',
    },
    overflowX: {
      auto: 'overflow-x-auto',
      hidden: 'overflow-x-hidden',
      clip: 'overflow-x-clip',
      scroll: 'overflow-x-scroll',
      visible: 'overflow-x-visible',
    },
    overflowY: {
      auto: 'overflow-y-auto',
      hidden: 'overflow-y-hidden',
      clip: 'overflow-y-clip',
      scroll: 'overflow-y-scroll',
      visible: 'overflow-y-visible',
    },
    flexGrow: {
      0: 'grow-0',
      1: 'grow',
    },
    flexShrink: {
      0: 'shrink-0',
      1: 'shrink',
    },
  },
  defaultVariants: {
    position: 'relative',
    overflow: 'visible',
    flexGrow: 0,
    flexShrink: 1,
  },
})
